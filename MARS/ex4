.data
a: .word 7, 8, 9, 10, 8, 1, 1, 1   # 定义数组a，包含8个数
resultmsg: .asciiz "The average is: " # 定义输出的提示信息
.text
.globl main

main:
    # 初始化
    la      $a0, a              # 将数组 a 的地址加载到 $a0 中
    li      $t0, 0              # 将 $t0 初始化为 0，用于存储数组元素的和
    li      $t1, 8              # 将 8（数组的元素个数）加载到寄存器 $t1

sum_loop:
    lw      $t2, 0($a0)         # 从数组a中读取一个元素到 $t2
    add     $t0, $t0, $t2       # 将数组元素的值加到 $t0（和）中
    addiu   $a0, $a0, 4         # 移动到数组中的下一个元素（每个元素4字节）
    subiu   $t1, $t1, 1         # $t1 减 1，表示已经处理过一个元素
    bnez    $t1, sum_loop       # 如果 $t1 不为零，继续执行循环

    # 计算平均数
    li      $t3, 8              # 将 8（数组的元素个数）加载到寄存器 $t3
    div     $t0, $t3            # $t0 中的和除以 8（整数除法）
    mflo    $t4                 # 获取商（即平均数）并存入 $t4

    # 打印输出平均数
    la      $a0, resultmsg      # 加载字符串 "The average is: " 的地址到 $a0
    li      $v0, 4              # 系统调用号 4，打印字符串
    syscall                     # 调用系统服务打印字符串

    move    $a0, $t4            # 将平均数放入 $a0 准备打印
    li      $v0, 1              # 系统调用号 1，打印整数
    syscall                     # 调用系统服务打印整数

    li      $a0, 0x0A           # 将换行符的 ASCII 码 0x0A 加载到 $a0
    li      $v0, 11             # 系统调用号 11，打印字符
    syscall                     # 调用系统服务打印换行符

    # 程序结束
    li      $v0, 10             # 设置系统调用号 10，表示退出程序
    syscall                     # 调用系统服务退出程序
